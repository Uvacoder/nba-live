{"version":3,"sources":["components/pages/teamDetails/Helper.js","data/UserInfo/eventSlice.js","data/UserInfo/infoSlice.js","data/mainRedux.js","data/Api.js","data/UserInfo/infoActions.js","components/layout/SideNav.js","components/layout/MobileNav.js","components/helpers/NotiContent.js","components/helpers/Notification.js","components/layout/Layout.js","components/loads/HomeSkeleton.js","components/pages/Events/LiveScores.js","components/pages/Events/gameONdate/EventItem.js","components/pages/Events/gameONdate/Events.js","components/loads/TeamGames.js","components/pages/Events/gameONdate/ErrorMessage.js","components/pages/Events/gameONdate/SpecificDate.js","data/UserInfo/eventsActions.js","components/pages/Events/Header.js","components/pages/Events/SelectTeam.js","components/loads/PlayersContainer.js","components/pages/Events/Next/UpcomingEvents.js","components/pages/Events/SelectedTeamContent/SelectedTeamNext.js","components/pages/Events/EventsMain.js","components/pages/teams/Team.js","components/pages/teams/Teams.js","components/pages/teamDetails/TeamPlayers.js","components/pages/teamDetails/TeamNext.js","components/pages/teamDetails/TeamPrevious.js","components/pages/teamDetails/Live.js/LiveEvent.js","components/pages/teamDetails/SeatGeek.js","components/pages/teamDetails/TeamContent.js","components/pages/teamDetails/TeamDetails.js","components/pages/Preferences/ScoresSetting.js","components/pages/Preferences/UpdateTeam.js","components/pages/Preferences/AddToCalendar.js","components/pages/Preferences/Notifications.js","components/pages/Preferences/Main.js","App.js","data/UserInfo/settingsActions.js","index.js","components/pages/Events/Latest/PastEvents.js","components/pages/teamDetails/Live.js/LiveSugg.js"],"names":["lang","navigator","language","getTeamInfo","teamID","allTeams","imgSrc","map","team","idTeam","teamLogo","strTeamBadge","teamShort","strTeamShort","arena","strStadium","liveItem","game","homeTeam","awayTeam","classBoldH","classBoldA","intHomeScore","intAwayScore","className","strStatus","class","strProgress","src","alt","idEvent","eventLiveScore","optClass","hideScores","progress","eventLayoutOpt","date","Date","strTimestamp","toLocaleDateString","weekday","month","day","classType","eventLayoutSche","gameDate","dateLocal","isToday","yesterday","now","today","time","toLocaleTimeString","hour","minute","dateShownContent","to","idHomeTeam","idAwayTeam","eventSlice","createSlice","name","initialState","onDate","events","status","last15","next15","trigger_Actions","showEvents","showTeamEvents","reducers","onSelectedDateEvents","state","action","payload","onSelectedDateStatus","next15EventsHandler","nextEvents","next15EventsStatus","last15EventsHandler","lastEvents","last15EventsStatus","toggleShowEvents","toggleShowTeamEvents","eventActions","actions","initial","setLocalStorage","window","localStorage","setItem","JSON","stringify","getItem","parse","settings","theme","addToCalendar","notifications","allow","previousQ","previousE","teamSelected","teams","teamLoadStatus","players","playersLoadStatus","upcomingGames","upcomingGamesStatus","previousGames","previousGamesStatus","changeTeam","live","games","all","details","infoSlice","userTeamHandler","loadTeamsHandler","loadStatusHandler","loadPlayersHandler","statusPlayersHandler","upcomingGamesHandler","statusUGHandler","previousGamesHandler","statusPGHandler","changeTeamHandler","change","loadLiveGames","liveGames","statusLiveGames","loadLiveDetails","setAppTheme","setHideScores","hide","setAddToCalendar","calendarOpt","setNotifications","opted","setPreviousQ","quater","setPreviousE","event","infoActions","store","configureStore","reducer","userInfo","eventReducer","API_URL","fetchUpcomingGames","id","dispatch","a","fetch","rq","json","res","data","getGames","fetchPreviousGames","results","fetchLiveGames","console","log","SideNav","useSelector","Object","keys","length","activeClassName","exact","MobileNav","props","style","setStyle","NotiContent","scoresSetting","info","strHomeTeamBadge","strHomeTeam","strAwayTeamBadge","strAwayTeam","Notification","useDispatch","useState","show","setShow","currentLive","currentTeam","teamIsSelected","filterOne","content","verifyHomeTeam","useEffect","forEach","qt","setTimeout","userOptedIn","onClick","Layout","setModal","setModalTeam","children","HomeSkeleton","LiveScores","z","b","undefined","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","responsive","breakpoint","EventItem","eventInfo","startsAt","year","endsAt","setHours","getHours","homeTeamId","awayTeamId","location","downloadfileName","filename","Events","TeamGames","ErrorMessage","SpecificDate","scrollRef","useRef","eventsStatus","value","onChange","changedDate","setChangedDate","setActiveRight","current","scrollTo","top","behavior","getFullYear","getMonth","getDate","headerDate","Error","message","getTeams","fetchDateSpecificGames","ref","Header","SelectTeam","PlayersContainer","UpcomingEvents","exclude","SelectedTeamNext","EventsMain","last15Status","last15Events","selectedTeam","noTeamSelected","document","title","PastEvents","Team","type","e","values","target","img","Teams","history","useHistory","setSelectedTeam","teamStatus","push","getValues","onSubmit","checked","strTeam","TeamPlayers","player","getPlayers","playersList","strPlayer","strPosition","idPlayer","TeamNext","nextFiveGames","TeamPrevious","previousFiveGames","LiveEvent","item","useRouteMatch","params","teamId","SeatGeek","TeamContent","isLive","match","UpcomingGamesstatus","teamName","backgroundImage","stadiumImg","stadiumName","LiveSugg","teamDesc","TeamDetails","strStadiumThumb","strDescriptionEN","ScoresSetting","isChecked","UpdateTeam","showBTN","setShowBTN","setTeam","daft","label","btnDisabled","Select","inputId","classNamePrefix","options","placeholder","disabled","AddToCalendar","Notifications","Main","userSelectedTeam","HomeMain","React","lazy","App","body","classList","add","remove","themeChange","getEvents","requestFqncy","interval","setInterval","clearInterval","fallback","path","ReactDOM","render","getElementById","homePth"],"mappings":"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","file":"static/js/main.051afc38.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nconst lang = navigator.language;\n\nexport function getTeamInfo(teamID, allTeams) {\n  let imgSrc = \"\";\n  allTeams.map((team) => {\n    if (team.idTeam === teamID) {\n      imgSrc = {\n        teamLogo: team.strTeamBadge,\n        teamShort: team.strTeamShort,\n        arena: team.strStadium,\n      };\n    }\n    return imgSrc;\n  });\n  return imgSrc;\n}\nexport function liveItem(game, homeTeam, awayTeam) {\n  let classBoldH = \"\";\n  let classBoldA = \"\";\n\n  if (+game.intHomeScore > +game.intAwayScore) {\n    classBoldH = \"bold\";\n  } else {\n    classBoldH = \"\";\n  }\n  if (+game.intAwayScore > +game.intHomeScore) {\n    classBoldA = \"bold\";\n  } else {\n    classBoldA = \"\";\n  }\n\n  return (\n    <div className=\"live-event-item\" key={game.idEvent}>\n      {game.strStatus === \"FT\" || game.strStatus === \"AOT\" ? (\n        <div class=\"live-indicator\">Final</div>\n      ) : (\n        <div class=\"live-indicator\">\n          <span>\n            {game.strStatus === \"NS\" ? \"Starting Soon\" : `${game.strStatus} - `}\n            {game.strStatus !== \"NS\" && `${game.strProgress}:00`}\n          </span>\n          <div class=\"live-indicator__bar__mask\">\n            <div class=\"live-indicator__bar__wrap\">\n              <div class=\"live-indicator__bar\"></div>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"live\">\n        <div className=\"live-left live-team\">\n          <img src={homeTeam.teamLogo} alt=\"test\" />\n          <span className={classBoldH}>{homeTeam.teamShort}</span>\n        </div>\n        <div className=\"live-center\">\n          <span className={classBoldH}>\n            {game.intHomeScore === null ? \"0\" : game.intHomeScore}\n          </span>\n          <span className=\"live-center-sep\">-</span>\n          <span className={classBoldA}>\n            {game.intAwayScore === null ? \"0\" : game.intAwayScore}\n          </span>\n        </div>\n        <div className=\"live-right live-team\">\n          <img src={awayTeam.teamLogo} alt=\"test\" />\n          <span className={classBoldA}>{awayTeam.teamShort}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport function eventLiveScore(game, homeTeam, awayTeam, optClass, hideScores) {\n  let classBoldH = \"\";\n  let classBoldA = \"\";\n\n  if (+game.intHomeScore > +game.intAwayScore) {\n    classBoldH = \"bold\";\n  } else {\n    classBoldH = \"\";\n  }\n  if (+game.intAwayScore > +game.intHomeScore) {\n    classBoldA = \"bold\";\n  } else {\n    classBoldA = \"\";\n  }\n\n  const progress = game.strProgress;\n\n  return (\n    <div className=\"live-event-item live-score-item\" key={game.idEvent}>\n      {game.strStatus === \"FT\" || game.strStatus === \"AOT\" ? (\n        <div class=\"live-indicator\">Final</div>\n      ) : (\n        <div class=\"live-indicator\">\n          <span>\n            {game.strStatus === \"NS\" ? \"Starting Soon\" : `${game.strStatus} `}\n            {game.strStatus !== \"NS\" && `${progress}'`}\n          </span>\n          <div class=\"live-indicator__bar__mask\">\n            <div class=\"live-indicator__bar__wrap\">\n              <div class=\"live-indicator__bar\"></div>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"live\">\n        <div className=\"live-left live-score-team\">\n          <img src={homeTeam.teamLogo} alt=\"test\" />\n          <span className={!hideScores && classBoldH}>\n            {homeTeam.teamShort}\n          </span>\n        </div>\n        {hideScores ? (\n          <div className=\"hide-scores\"></div>\n        ) : (\n          <div className=\"live-score-center\">\n            <span className={!hideScores && classBoldH}>\n              {game.intHomeScore === null ? \"0\" : game.intHomeScore}\n            </span>\n            <span className=\"live-score-center-sep\">-</span>\n            <span className={!hideScores && classBoldA}>\n              {game.intAwayScore === null ? \"0\" : game.intAwayScore}\n            </span>\n          </div>\n        )}\n\n        <div className=\"live-right live-score-team\">\n          <img src={awayTeam.teamLogo} alt=\"test\" />\n          <span className={!hideScores && classBoldA}>\n            {awayTeam.teamShort}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/// opt layout\n\nexport function eventLayoutOpt(game, homeTeam, awayTeam, optClass, hideScores) {\n  const lang = navigator.language;\n  const dateLocal = new Date(game.strTimestamp);\n  const date = dateLocal.toLocaleDateString(`${lang}`, {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  let classBoldH = \"\";\n  let classBoldA = \"\";\n\n  if (+game.intHomeScore > +game.intAwayScore) {\n    classBoldH = \"previous-right bold\";\n  } else {\n    classBoldH = \"previous-right\";\n  }\n  if (+game.intAwayScore > +game.intHomeScore) {\n    classBoldA = \"previous-right bold\";\n  } else {\n    classBoldA = \"previous-right\";\n  }\n\n  // get colors from team logos\n\n  const classType = `previous-item ${optClass}`;\n\n  return (\n    <div key={game.idEvent} className={classType}>\n      <div className=\"previous\">\n        <div className=\"previous-info\">\n          <div className=\"previous-info-score\">\n            <div className=\"previous-team gameTeam\">\n              <div className=\"previous-left\">\n                <img src={homeTeam.teamLogo} alt={homeTeam.teamShort} />\n                <span className={!hideScores && classBoldH}>\n                  {homeTeam.teamShort}\n                </span>\n              </div>\n              <div className={classBoldH}>\n                {hideScores ? (\n                  <div className=\"hide-scores-alt\"></div>\n                ) : (\n                  game.intHomeScore\n                )}\n              </div>\n            </div>\n            <div className=\"previous-team gameTeam\">\n              <div className=\"previous-left\">\n                <img src={awayTeam.teamLogo} alt=\"test\" />\n                <span className={!hideScores && classBoldA}>\n                  {awayTeam.teamShort}\n                </span>\n              </div>\n              <div className={classBoldA}>\n                {hideScores ? (\n                  <div className=\"hide-scores-alt\"></div>\n                ) : (\n                  game.intAwayScore\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"previous-details\">{date}</div>\n    </div>\n  );\n}\n\n/// opt layout\n\nexport function eventLayoutSche(game, homeTeam, awayTeam, optClass) {\n  const gameDate = game.strTimestamp;\n  const dateLocal = new Date(gameDate);\n  const isToday = new Date();\n  const isYesterday = new Date(Date.now() - 864e5);\n  const yesterday = isYesterday.toLocaleDateString(`${lang}`, {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n  const today = isToday.toLocaleDateString(`${lang}`, {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  const date = dateLocal.toLocaleDateString(`${lang}`, {\n    weekday: \"short\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  const time = dateLocal.toLocaleTimeString(`${lang}`, {\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n\n  // due to api update time, it might be a day behind and still show yesterdays game as upcomingGame, here is a simple solution\n\n  let dateShownContent = \"\";\n  if (date === yesterday) {\n    dateShownContent = \"Yesterday\";\n  } else if (date === today) {\n    dateShownContent = \"Today\";\n  } else {\n    dateShownContent = date;\n  }\n\n  const classType = `upcomingGame ${optClass}`;\n\n  return (\n    <div key={game.idEvent} className={classType}>\n      <div className=\"upcomingGame-team gameTeam\">\n        <Link to={`/teams/${game.idHomeTeam}`}>\n          <img src={homeTeam.teamLogo} alt={homeTeam.teamShort} />\n        </Link>\n        <span>{homeTeam.teamShort}</span>\n      </div>\n      <div className=\"upcomingGame-info\">\n        <span className=\"upcomingGame-info-time\">{time}</span>\n        <span className=\"upcomingGame-info-date\">{dateShownContent}</span>\n      </div>\n      <div className=\"upcomingGame-team gameTeam\">\n        <Link to={`/teams/${game.idAwayTeam}`}>\n          <img src={awayTeam.teamLogo} alt=\"test\" />\n        </Link>\n        <span>{awayTeam.teamShort}</span>\n      </div>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  onDate: {\n    events: [],\n    status: null,\n  },\n  events: {\n    last15: {\n      events: [],\n      status: null,\n    },\n    next15: {\n      events: [],\n      status: null,\n    },\n  },\n  trigger_Actions: {\n    showEvents: false,\n    showTeamEvents: false,\n  },\n};\n\nconst eventSlice = createSlice({\n  name: \"event\",\n  initialState,\n  reducers: {\n    onSelectedDateEvents(state, action) {\n      state.onDate.events = action.payload.events;\n    },\n    onSelectedDateStatus(state, action) {\n      state.onDate.status = action.payload.status;\n    },\n    next15EventsHandler(state, action) {\n      state.events.next15.events = action.payload.nextEvents;\n    },\n    next15EventsStatus(state, action) {\n      state.events.next15.status = action.payload.status;\n    },\n    last15EventsHandler(state, action) {\n      state.events.last15.events = action.payload.lastEvents;\n    },\n    last15EventsStatus(state, action) {\n      state.events.last15.status = action.payload.status;\n    },\n    toggleShowEvents(state) {\n      state.trigger_Actions.showEvents = !state.trigger_Actions.showEvents;\n    },\n    toggleShowTeamEvents(state) {\n      state.trigger_Actions.showTeamEvents =\n        !state.trigger_Actions.showTeamEvents;\n    },\n  },\n});\n\nexport default eventSlice.reducer;\nexport const eventActions = eventSlice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nlet initial = \"\";\n\nif (window.localStorage.getItem(\"state\")) {\n  initial = JSON.parse(window.localStorage.getItem(\"state\"));\n} else {\n  initial = {\n    settings: {\n      theme: \"dark\",\n      hideScores: false,\n      addToCalendar: false,\n      notifications: {\n        allow: false,\n        previousQ: \"\",\n        previousE: \"\",\n      },\n    },\n    teamSelected: {},\n    teams: [],\n    teamLoadStatus: null,\n    players: [],\n    playersLoadStatus: null,\n    upcomingGames: [],\n    upcomingGamesStatus: null,\n    previousGames: [],\n    previousGamesStatus: null,\n    changeTeam: false,\n    live: {\n      games: {\n        all: [],\n        status: null,\n      },\n      details: [],\n    },\n  };\n}\n\nfunction setLocalStorage(state) {\n  window.localStorage.setItem(\"state\", JSON.stringify(state));\n}\n\nconst infoSlice = createSlice({\n  name: \"info\",\n  initialState: initial,\n  reducers: {\n    userTeamHandler(state, action) {\n      state.teamSelected = action.payload.teamSelected;\n      setLocalStorage(state);\n    },\n    loadTeamsHandler(state, action) {\n      state.teams = action.payload.teams;\n      setLocalStorage(state);\n    },\n    loadStatusHandler(state, action) {\n      state.teamLoadStatus = action.payload.status;\n      setLocalStorage(state);\n    },\n    loadPlayersHandler(state, action) {\n      state.players = action.payload.players;\n      setLocalStorage(state);\n    },\n    statusPlayersHandler(state, action) {\n      state.playersLoadStatus = action.payload.status;\n      setLocalStorage(state);\n    },\n    upcomingGamesHandler(state, action) {\n      state.upcomingGames = action.payload.games;\n      setLocalStorage(state);\n    },\n    statusUGHandler(state, action) {\n      state.upcomingGamesStatus = action.payload.status;\n      setLocalStorage(state);\n    },\n    previousGamesHandler(state, action) {\n      state.previousGames = action.payload.games;\n      setLocalStorage(state);\n    },\n    statusPGHandler(state, action) {\n      state.previousGamesStatus = action.payload.status;\n      setLocalStorage(state);\n    },\n    changeTeamHandler(state, action) {\n      state.changeTeam = action.payload.change;\n      setLocalStorage(state);\n    },\n    loadLiveGames(state, action) {\n      state.live.games.all = action.payload.liveGames;\n      setLocalStorage(state);\n    },\n    statusLiveGames(state, action) {\n      state.live.games.status = action.payload.status;\n      setLocalStorage(state);\n    },\n    loadLiveDetails(state, action) {\n      state.live.details = action.payload.details;\n      setLocalStorage(state);\n    },\n    setAppTheme(state, action) {\n      state.settings.theme = action.payload.theme;\n      setLocalStorage(state);\n    },\n    setHideScores(state, action) {\n      state.settings.hideScores = action.payload.hide;\n      setLocalStorage(state);\n    },\n    setAddToCalendar(state, action) {\n      state.settings.addToCalendar = action.payload.calendarOpt;\n      setLocalStorage(state);\n    },\n    setNotifications(state, action) {\n      state.settings.notifications.allow = action.payload.opted;\n      setLocalStorage(state);\n    },\n    setPreviousQ(state, action) {\n      state.settings.notifications.previousQ = action.payload.quater;\n      setLocalStorage(state);\n    },\n    setPreviousE(state, action) {\n      state.settings.notifications.previousE = action.payload.event;\n      setLocalStorage(state);\n    },\n  },\n});\n\nexport default infoSlice.reducer;\nexport const infoActions = infoSlice.actions;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport infoSlice from \"./UserInfo/infoSlice\";\nimport eventSlice from \"./UserInfo/eventSlice\";\n\nconst store = configureStore({\n  reducer: { userInfo: infoSlice, eventReducer: eventSlice },\n});\n\nexport default store;\n","export const API_KEY = `40130162`;\nexport const API_URL = `https://www.thesportsdb.com/api/v1/json/${API_KEY}/`;\n","import { API_URL } from \"../Api\";\nimport { infoActions } from \"./infoSlice\";\n\nexport function fetchTeams() {\n  return (dispatch) => {\n    dispatch(infoActions.loadStatusHandler({ status: \"loading\" }));\n    async function getTeams() {\n      try {\n        const rq = await fetch(`${API_URL}Lookup_all_teams.php?id=4387`);\n        const res = await rq.json();\n        const data = res.teams;\n        dispatch(infoActions.loadTeamsHandler({ teams: data }));\n        dispatch(infoActions.loadStatusHandler({ status: \"done\" }));\n      } catch (error) {\n        dispatch(infoActions.loadStatusHandler({ status: \"error\" }));\n      }\n    }\n    getTeams();\n  };\n}\n\nexport function fetchTeamPlayers(id) {\n  return (dispatch) => {\n    async function getPlayers() {\n      dispatch(infoActions.statusPlayersHandler({ status: \"loading\" }));\n      try {\n        const rq = await fetch(`${API_URL}lookup_all_players.php?id=${id}`);\n        const res = await rq.json();\n        const data = res.player;\n        dispatch(infoActions.loadPlayersHandler({ players: data }));\n        dispatch(infoActions.statusPlayersHandler({ status: \"done\" }));\n      } catch (error) {\n        dispatch(infoActions.statusPlayersHandler({ status: \"error\" }));\n      }\n    }\n    getPlayers();\n  };\n}\n\nexport function fetchUpcomingGames(id) {\n  return (dispatch) => {\n    dispatch(infoActions.statusUGHandler({ status: \"loading\" }));\n    async function getGames() {\n      try {\n        const rq = await fetch(`${API_URL}eventsnext.php?id=${id}`);\n        const res = await rq.json();\n        const data = res.events;\n        dispatch(infoActions.upcomingGamesHandler({ games: data }));\n        dispatch(infoActions.statusUGHandler({ status: \"done\" }));\n      } catch (error) {\n        dispatch(infoActions.statusUGHandler({ status: \"error\" }));\n      }\n    }\n    getGames();\n  };\n}\n\nexport function fetchPreviousGames(id) {\n  return (dispatch) => {\n    dispatch(infoActions.statusPGHandler({ status: \"loading\" }));\n    async function getGames() {\n      try {\n        const rq = await fetch(`${API_URL}eventslast.php?id=${id}`);\n        const res = await rq.json();\n        const data = res.results;\n        dispatch(infoActions.previousGamesHandler({ games: data }));\n        dispatch(infoActions.statusPGHandler({ status: \"done\" }));\n      } catch (error) {\n        dispatch(infoActions.statusPGHandler({ status: \"error\" }));\n      }\n    }\n    getGames();\n  };\n}\n\nexport function fetchLiveGames() {\n  return (dispatch) => {\n    dispatch(infoActions.statusLiveGames({ status: \"loading\" }));\n    async function getGames() {\n      try {\n        const rq = await fetch(\n          `https://www.thesportsdb.com/api/v2/json/40130162/livescore.php?l=4387`\n        );\n        const res = await rq.json();\n        const data = res.events;\n        dispatch(infoActions.statusLiveGames({ status: \"done\" }));\n        dispatch(infoActions.loadLiveGames({ liveGames: data }));\n      } catch (error) {\n        console.log(\"test\");\n        dispatch(infoActions.statusLiveGames({ status: \"error\" }));\n      }\n    }\n    getGames();\n  };\n}\n","import { NavLink, Link } from \"react-router-dom\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport SportsBasketballOutlinedIcon from \"@mui/icons-material/SportsBasketballOutlined\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport CalendarTodayOutlinedIcon from \"@mui/icons-material/CalendarTodayOutlined\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport { useSelector } from \"react-redux\";\nimport \"./sass/sideNav.scss\";\n\nfunction SideNav() {\n  const team = useSelector((store) => store.userInfo.teamSelected);\n  const teamSelected = Object.keys(team).length !== 0;\n\n  return (\n    <div className=\"sideNav\">\n      <div className=\"logo\">\n        <Link to=\"/home\">\n          <img\n            src=\"https://warnermediaforbrands.com/wmx/sites/default/files/2021-03/nba-white_2.png\"\n            alt=\"logo\"\n          />\n        </Link>\n      </div>\n      <nav className=\"nav\">\n        <ul>\n          <li>\n            <NavLink to=\"/home\" activeClassName=\"active\" exact>\n              <HomeOutlinedIcon />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/teams\" activeClassName=\"active\">\n              <SportsBasketballOutlinedIcon />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/events\" activeClassName=\"active\">\n              <CalendarTodayOutlinedIcon />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/preferences\" activeClassName=\"active\">\n              {teamSelected ? (\n                <AccountCircleOutlinedIcon />\n              ) : (\n                <ManageAccountsIcon />\n              )}\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default SideNav;\n","import HomeRoundedIcon from \"@mui/icons-material/HomeRounded\";\nimport SportsBasketballIcon from \"@mui/icons-material/SportsBasketball\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nfunction MobileNav(props) {\n  const style = props.setStyle ? \"mobile-nav\" : \"mobile-nav mobile-nav-ra\";\n\n  return (\n    <div className={style}>\n      <ul>\n        <li>\n          <NavLink to=\"/home\" activeClassName=\"active\" exact>\n            <HomeRoundedIcon />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/teams\" activeClassName=\"active\">\n            <SportsBasketballIcon />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/events\" activeClassName=\"active\">\n            <CalendarTodayIcon />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/preferences\" activeClassName=\"active\">\n            <SettingsIcon />\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default MobileNav;\n","import { Fragment } from \"react\";\nimport { getTeamInfo, eventLiveScore } from \"../pages/teamDetails/Helper\";\nimport { useSelector } from \"react-redux\";\n\nfunction NotiContent(props) {\n  const scoresSetting = useSelector(\n    (store) => store.userInfo.settings.hideScores\n  );\n\n  let classBoldH = \"\";\n  let classBoldA = \"\";\n\n  if (+props.info.intHomeScore > +props.info.intAwayScore) {\n    classBoldH = \"bold\";\n  } else {\n    classBoldH = \"\";\n  }\n  if (+props.info.intAwayScore > +props.info.intHomeScore) {\n    classBoldA = \"bold\";\n  } else {\n    classBoldA = \"\";\n  }\n\n  return (\n    <Fragment>\n      <div className=\"notification-team\">\n        <div className=\"notification-team-info\">\n          <img src={props.info.strHomeTeamBadge} alt={props.info.strHomeTeam} />\n          <span className={!scoresSetting && classBoldH}>\n            {props.info.strHomeTeam}\n          </span>\n        </div>\n        <div className={`notification-team-score ${classBoldH}`}>\n          {scoresSetting ? (\n            <div className=\"hide-scores-alt\"></div>\n          ) : props.info.intHomeScore ? (\n            props.info.intHomeScore\n          ) : (\n            \"0\"\n          )}\n        </div>\n      </div>\n      <div className=\"notification-team\">\n        <div className=\"notification-team-info second-t\">\n          <img src={props.info.strAwayTeamBadge} alt={props.info.strAwayTeam} />\n          <span className={!scoresSetting && classBoldA}>\n            {props.info.strAwayTeam}\n          </span>\n        </div>\n        <div className={`notification-team-score ${classBoldA}`}>\n          {scoresSetting ? (\n            <div className=\"hide-scores-alt\"></div>\n          ) : props.info.intAwayScore ? (\n            props.info.intAwayScore\n          ) : (\n            \"0\"\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default NotiContent;\n","import \"./notifications.scss\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoActions } from \"../../data/UserInfo/infoSlice\";\nimport NotiContent from \"./NotiContent\";\nimport TimeTill from \"./TimeTill\";\n\nfunction Notification() {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  let currentLive = false;\n  const currentTeam = useSelector((store) => store.userInfo.teamSelected);\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n\n  const opted = useSelector(\n    (store) => store.userInfo.settings.notifications.allow\n  );\n\n  const previousQ = useSelector(\n    (store) => store.userInfo.settings.notifications.previousQ\n  );\n  const previousE = useSelector(\n    (store) => store.userInfo.settings.notifications.previousE\n  );\n\n  const team = useSelector((store) => store.userInfo.teamSelected);\n  const teamIsSelected = Object.keys(team).length !== 0;\n\n  const filterOne = opted && teamIsSelected;\n\n  let content = \"\";\n\n  if (liveGames) {\n    liveGames.map((game) => {\n      const verifyHomeTeam = +game.idHomeTeam === +currentTeam.id;\n      const verifyAwayTeam = +game.idAwayTeam === +currentTeam.id;\n      if (verifyAwayTeam || verifyHomeTeam) {\n        content = game;\n        currentLive = true;\n      }\n      return content;\n    });\n  }\n  console.log(content);\n  useEffect(() => {\n    const quaters = [\"HT\", \"FT\"];\n    quaters.forEach((qt) => {\n      if (content.strStatus === qt) {\n        if (previousE === \"\") {\n          dispatch(\n            infoActions.setPreviousQ({\n              quater: qt,\n            })\n          );\n          dispatch(\n            infoActions.setPreviousE({\n              event: content.idEvent,\n            })\n          );\n        }\n\n        if (previousE === content.idEvent && previousQ === qt) return;\n\n        setTimeout(() => {\n          setShow(true);\n          dispatch(\n            infoActions.setPreviousQ({\n              quater: qt,\n            })\n          );\n          dispatch(\n            infoActions.setPreviousE({\n              event: content.idEvent,\n            })\n          );\n        }, [2000]);\n      }\n    });\n  }, [content, dispatch, currentTeam, previousQ, previousE]);\n\n  const userOptedIn =\n    filterOne && currentLive && show\n      ? \"notification\"\n      : \"notification opted-out\";\n\n  function closeNotification() {\n    setShow(false); // set dispatch use redux instead\n  }\n\n  return (\n    <div className={userOptedIn}>\n      <div className=\"notification-inner\">\n        <div className=\"notification-top\">\n          <div className=\"notification-label\">\n            <div className=\"notification-label-left\">\n              <h4>Team Notification</h4>\n              <span>\n                {content.strStatus === \"FT\" || content.strStatus === \"AOT\"\n                  ? \"Final\"\n                  : content.strStatus}\n              </span>\n            </div>\n          </div>\n          <div className=\"notification-close\" onClick={closeNotification}>\n            <span>close</span>\n          </div>\n        </div>\n\n        <div className=\"notification-info\">\n          <NotiContent info={content} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Notification;\n","import { Fragment, useState } from \"react\";\nimport \"../../index.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SideNav from \"./SideNav\";\nimport MobileNav from \"./MobileNav\";\nimport Headroom from \"react-headroom\";\nimport Notification from \"../helpers/Notification\";\n\nimport { eventActions } from \"../../data/UserInfo/eventSlice\";\n\nfunction Layout(props) {\n  const dispatch = useDispatch();\n  const setModal = useSelector(\n    (store) => store.eventReducer.trigger_Actions.showEvents\n  );\n  const setModalTeam = useSelector(\n    (store) => store.eventReducer.trigger_Actions.showTeamEvents\n  );\n\n  const [hide, setHide] = useState(true);\n  // -----> will come back here to better handle modal events <--- Could be improved\n  function hideEventsHandler() {\n    dispatch(eventActions.toggleShowEvents());\n  }\n  function hideTeamEventsHandler() {\n    dispatch(eventActions.toggleShowTeamEvents());\n  }\n\n  return (\n    <Fragment>\n      <Notification />\n\n      <div\n        className={setModal ? \"modal modal_active\" : \"modal\"}\n        onClick={hideEventsHandler}\n      ></div>\n      <div\n        className={setModalTeam ? \"modal modal_active\" : \"modal\"}\n        onClick={hideTeamEventsHandler}\n      ></div>\n      <div className=\"flex-bottom\">\n        {(!setModal || !setModalTeam) && <MobileNav setStyle={hide} />}\n        <SideNav />\n\n        <div className=\"main\">{props.children}</div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\n\nfunction HomeSkeleton() {\n  return (\n    <div class=\"placeholder-item\">\n      <span class=\"span-header\"> </span>\n      <div class=\"scores-container\">\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n      </div>\n      <span class=\"span-head\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <div class=\"scores-container\">\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n      </div>\n      <span class=\"span-head\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n      <span class=\"span-text-item\"></span>\n    </div>\n  );\n}\n\nexport default HomeSkeleton;\n","import { useSelector } from \"react-redux\";\nimport { getTeamInfo, eventLiveScore } from \"../teamDetails/Helper\";\nimport \"./events.scss\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction LiveScores() {\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const teams = useSelector((store) => store.userInfo.teams);\n  const scoresSetting = useSelector(\n    (store) => store.userInfo.settings.hideScores\n  );\n  if (!liveGames) return null;\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 14000,\n    arrows: false,\n    className: \"live-events_1\",\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const z = liveGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n\n    const hideScores = scoresSetting;\n    const b = eventLiveScore(game, homeTeam, awayTeam, undefined, hideScores);\n\n    return (\n      <div className=\"live-score\" key={game.idEvent}>\n        {b}\n      </div>\n    );\n  });\n  // console.log(\"z\", z);\n  // console.log(\"liveGames\", liveGames);\n\n  return <Slider {...settings}>{z}</Slider>;\n}\n\nexport default LiveScores;\n","import { useSelector } from \"react-redux\";\nimport { getTeamInfo } from \"../../teamDetails/Helper\";\nimport AddToCalendar from \"@culturehq/add-to-calendar\";\nimport \"@culturehq/add-to-calendar/dist/styles.css\";\n\nfunction EventItem(props) {\n  \n  const teams = useSelector((store) => store.userInfo.teams);\n  const addToCalendar = useSelector(\n    (store) => store.userInfo.settings.addToCalendar\n  );\n  let lang = navigator.language;\n\n  // date stuff\n  const dateLocal = new Date(props.eventInfo.date);\n  const time = dateLocal.toLocaleTimeString(`${lang}`, {\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n  const startsAt = dateLocal.toLocaleTimeString(`${lang}`, {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\",\n    day: \"numeric\",\n  });\n\n  const formatEnd = new Date(dateLocal.setHours(dateLocal.getHours() + 3));\n  const endsAt = formatEnd.toLocaleTimeString(`${lang}`, {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\",\n    day: \"numeric\",\n  });\n\n  // team logos\n  const homeTeam = getTeamInfo(props.eventInfo.homeTeamId, teams);\n \n  const awayTeam = getTeamInfo(props.eventInfo.awayTeamId, teams);\n\n  // add to calendar opt\n  const event = {\n    name: `${props.eventInfo.homeTeam} @ ${props.eventInfo.awayTeam}`,\n    details: `Watch the ${props.eventInfo.homeTeam} take on ${props.eventInfo.awayTeam} at ${time}`,\n    location: homeTeam.arena,\n    startsAt,\n    endsAt,\n  };\n\n  \n  const downloadfileName = `${homeTeam.teamShort}_${awayTeam.teamShort}`;\n\n  return (\n    <div className=\"onDate-item\">\n      <div className=\"onDate-item-top\">\n        <div className=\"onDate-item-time\">\n          <span>{time}</span>\n        </div>\n        <div className=\"onDate-item-teams\">\n          <div className=\"onDate-item-teams-row\">\n            <img src={awayTeam.teamLogo} alt={awayTeam.teamShort} />\n            <span>{awayTeam.teamShort}</span>\n          </div>\n          <div className=\"onDate-item-teams-center\">at</div>\n          <div className=\"onDate-item-teams-row\">\n            <img src={homeTeam.teamLogo} alt={homeTeam.teamShort} />\n            <span>{homeTeam.teamShort}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"onDate-item-actions\">\n        {addToCalendar && (\n          <AddToCalendar\n            event={event}\n            children=\"\"\n            filename={downloadfileName}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default EventItem;\n","import { useSelector } from \"react-redux\";\nimport \"../events.scss\";\nimport EventItem from \"./EventItem\";\n\nfunction Events() {\n  const events = useSelector((store) => store.eventReducer.onDate.events);\n\n  return (\n    <div className=\"onDate-container\">\n      {events.map((event) => {\n   \n        return (\n          <EventItem\n            key={event.idEvent}\n            eventInfo={{\n              date: event.strTimestamp,\n              homeTeam: event.strHomeTeam,\n              homeTeamId: event.idHomeTeam,\n              awayTeam: event.strAwayTeam,\n              awayTeamId: event.idAwayTeam,\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Events;\n","import React from \"react\";\n\nfunction TeamGames() {\n  return (\n    <div class=\"placeholder-item\">\n      <div class=\"team-games\">\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n      </div>\n      <div class=\"team-games-big\">\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamGames;\n","import \"../events.scss\";\n\nfunction ErrorMessage() {\n  return (\n    <div className=\"errorMessage-date\">\n      <h4>Umm!! something went wrong...</h4>\n      <span>Try selecting another date.</span>\n    </div>\n  );\n}\n\nexport default ErrorMessage;\n","import \"../events.scss\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { fetchDateSpecificGames } from \"../../../../data/UserInfo/eventsActions\";\nimport Events from \"./Events\";\nimport TeamGames from \"../../../loads/TeamGames\";\nimport ErrorMessage from \"./ErrorMessage\";\nconst lang = navigator.language;\n\nfunction SpecificDate() {\n  const scrollRef = useRef(null);\n\n  const dispatch = useDispatch();\n  const eventsStatus = useSelector((store) => store.eventReducer.onDate.status);\n  const [value, onChange] = useState(new Date());\n  const [changedDate, setChangedDate] = useState(\"\");\n\n  const setActiveRight = useSelector(\n    (store) => store.eventReducer.trigger_Actions.showEvents\n  );\n\n  useEffect(() => {\n    if (setActiveRight && scrollRef !== null) {\n      scrollRef.current.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    }\n  }, [setActiveRight]);\n\n  useEffect(() => {\n    const date =\n      value.getFullYear() +\n      \"-\" +\n      (value.getMonth() + 1) + // index starts at 0 so add 1\n      \"-\" +\n      (value.getDate() + 1);\n\n    const headerDate = value.toLocaleDateString(`${lang}`, {\n      year: \"numeric\",\n      month: \"short\",\n      weekday: \"short\",\n      day: \"numeric\",\n    });\n    dispatch(fetchDateSpecificGames(date));\n    setChangedDate(headerDate);\n  }, [value, dispatch]);\n\n  let content = \"\";\n\n  if (eventsStatus === \"error\") {\n    content = <ErrorMessage />;\n  } else if (eventsStatus === \"loading\") {\n    content = <TeamGames />;\n  } else {\n    content = <Events />;\n  }\n\n  return (\n    <div className=\"specific-container\" ref={scrollRef}>\n      <p className=\"specific-header\">\n        Games happening on <span>{changedDate}</span>\n      </p>\n      <Calendar onChange={onChange} value={value} className=\"calendar\" />\n      {content}\n    </div>\n  );\n}\n\nexport default SpecificDate;\n","import { API_URL } from \"../Api\";\nimport { eventActions } from \"./eventSlice\";\n\nexport function fetchDateSpecificGames(date) {\n  console.log(date);\n  return (dispatch) => {\n    async function getTeams() {\n      dispatch(eventActions.onSelectedDateStatus({ status: \"loading\" }));\n      try {\n        const rq = await fetch(`${API_URL}eventsday.php?d=${date}&l=4387`);\n        const res = await rq.json();\n        if (res.events === null) throw new Error(\"no events found\");\n        dispatch(eventActions.onSelectedDateEvents({ events: res.events }));\n        dispatch(eventActions.onSelectedDateStatus({ status: \"done\" }));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(eventActions.onSelectedDateStatus({ status: \"error\" }));\n      }\n    }\n    getTeams();\n  };\n}\n\n// fetch past 15 games\nexport function fetchLast15Games() {\n  return (dispatch) => {\n    async function getEvents() {\n      dispatch(eventActions.last15EventsStatus({ status: \"loading\" }));\n      try {\n        const rq = await fetch(`${API_URL}eventspastleague.php?id=4387`);\n        const res = await rq.json();\n        if (res.events === null) throw new Error(\"no events found\");\n        dispatch(eventActions.last15EventsHandler({ lastEvents: res.events }));\n        dispatch(eventActions.last15EventsStatus({ status: \"done\" }));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(eventActions.last15EventsStatus({ status: \"error\" }));\n      }\n    }\n    getEvents();\n  };\n}\n\n// fetch past 15 games\nexport function fetchNext15Games() {\n  return (dispatch) => {\n    async function getEvents() {\n      dispatch(eventActions.next15EventsStatus({ status: \"loading\" }));\n      try {\n        const rq = await fetch(`${API_URL}eventsnextleague.php?id=4387`);\n        const res = await rq.json();\n        if (res.events === null) throw new Error(\"no events found\");\n        dispatch(eventActions.next15EventsHandler({ nextEvents: res.events }));\n        dispatch(eventActions.next15EventsStatus({ status: \"done\" }));\n      } catch (error) {\n        console.log(error.message);\n        dispatch(eventActions.next15EventsStatus({ status: \"error\" }));\n      }\n    }\n    getEvents();\n  };\n}\n\n// fetch leauge table\nexport function fetchTable() {\n  return (dispatch) => {\n    async function getTeams() {\n      try {\n        const rq = await fetch(`${API_URL}lookuptable.php?l=4387&s=2021-2022`);\n        const res = await rq.json();\n        if (res.events === null) throw new Error(\"no events found\");\n        console.log(rq);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getTeams();\n  };\n}\n","import \"./events.scss\";\n\nfunction Header() {\n  return (\n    <div className=\"events-header\">\n      <div className=\"events-header-overlay\"></div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\n\nfunction SelectTeam() {\n  return (\n    <div className=\"message-selectTeam\">\n      <div className=\"message-selectTeam-img\"></div>\n      <div className=\"message-selectTeam-txt\">\n        <div className=\"message-selectTeam-txt-c\">\n          <h4>Pick your team</h4>\n          <span>\n            Get more when selecting\n            <br />\n            your favorite team.\n          </span>\n          <Link to=\"/teams\">\n            <button>Pick Team</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SelectTeam;\n","function PlayersContainer() {\n  return (\n    <div class=\"placeholder-item\">\n      <div class=\"players-container\">\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n        <span class=\"span-text-item\"></span>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayersContainer;\n","import { useSelector } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport { getTeamInfo, eventLayoutSche } from \"../../teamDetails/Helper\";\n\nfunction UpcomingEvents() {\n  const events = useSelector(\n    (store) => store.eventReducer.events.next15.events\n  );\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 4.1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 8000,\n    arrows: false,\n    className: \"upcoming-events\",\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 3.2,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 2.1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const z = events.map((game) => {\n    let exclude = \"\";\n\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n    const optClass = \"events-upcoming-item\";\n\n    if (liveGames) {\n      liveGames.map((event) => {\n        if (event.idEvent === game.idEvent) {\n          exclude = event;\n        }\n      });\n\n      // exclude event from showing if its currently LIVE\n\n      if (exclude.idEvent === game.idEvent) return;\n    }\n\n    const b = eventLayoutSche(game, homeTeam, awayTeam, optClass);\n\n    return (\n      <div className=\"events-past-item\" key={game.idEvent}>\n        {b}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"events-upcoming\">\n      <div className=\"events-past-head\">\n        <div className=\"events-past-head-title\">\n          <h4>Upcoming Games</h4>\n          <span>Quick view of games to come.</span>\n        </div>\n      </div>\n      <Slider {...settings}>{z}</Slider>\n    </div>\n  );\n}\n\nexport default UpcomingEvents;\n","import Slider from \"react-slick\";\nimport { useSelector } from \"react-redux\";\nimport { getTeamInfo, eventLayoutSche } from \"../../teamDetails/Helper\";\n\nfunction SelectedTeamNext() {\n  const upcomingGames = useSelector((store) => store.userInfo.upcomingGames);\n  const teamSelected = useSelector((store) => store.userInfo.teamSelected);\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    autoplay: false,\n    autoplaySpeed: 9000,\n    arrows: false,\n    className: \"upcoming-events\",\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 3.1,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 2.05,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n  const content = upcomingGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n\n    const optClass = \"selected-next\";\n\n    const b = eventLayoutSche(game, homeTeam, awayTeam, optClass);\n\n    return (\n      <div className=\"events-past-item\" key={game.idEvent}>\n        {b}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"events-upcoming\">\n      <div className=\"events-past-head\">\n        <div className=\"events-past-head-title\">\n          <h4>{teamSelected.name} | Up Next</h4>\n          <span>Your team's upcoming games</span>\n        </div>\n      </div>\n      <Slider {...settings}>{content}</Slider>\n    </div>\n  );\n}\n\nexport default SelectedTeamNext;\n","import { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./events.scss\";\nimport LiveScores from \"./LiveScores\";\n\nimport SpecificDate from \"./gameONdate/SpecificDate\";\nimport Header from \"./Header\";\nimport PastEvents from \"./Latest/PastEvents\";\nimport SelectTeam from \"./SelectTeam\";\nimport PlayersContainer from \"../../loads/PlayersContainer\";\nimport UpcomingEvents from \"./Next/UpcomingEvents\";\nimport SelectedTeamNext from \"./SelectedTeamContent/SelectedTeamNext\";\nimport { eventActions } from \"../../../data/UserInfo/eventSlice\";\n\nfunction EventsMain() {\n  const scrollRef = useRef(null);\n\n  const dispatch = useDispatch();\n\n  const setActiveRight = useSelector(\n    (store) => store.eventReducer.trigger_Actions.showEvents\n  );\n\n  const last15Status = useSelector(\n    (store) => store.eventReducer.events.last15.status\n  );\n  const last15Events = useSelector(\n    (store) => store.eventReducer.events.last15.events\n  );\n  const selectedTeam = useSelector((store) => store.userInfo.teamSelected);\n  const noTeamSelected = Object.keys(selectedTeam).length === 0;\n\n  if (setActiveRight && scrollRef !== null) {\n    setTimeout(() => {\n      scrollRef.current.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    }, [1000]); // small touch to showcase smoother scrolling\n  }\n\n  function hideEventsHandler() {\n    dispatch(eventActions.toggleShowEvents());\n  }\n\n  useEffect(() => {\n    // dispatch(fetchTable());\n    document.title = `NBA Scores, Schedules & More!`;\n  }, []);\n  return (\n    <div className=\"events\">\n      {/*  add !live full height */}\n      <div className=\"events-center\">\n        <div className=\"events-center-left\">\n          <div className=\"events-top sticky\">\n            <LiveScores />\n          </div>\n          <Header />\n\n          <div className=\"events-content\">\n            {last15Status === \"loading\" && last15Events ? (\n              <PlayersContainer />\n            ) : (\n              <PastEvents />\n            )}\n            {noTeamSelected ? <SelectTeam /> : <SelectedTeamNext />}\n\n            <UpcomingEvents />\n          </div>\n        </div>\n\n        <div\n          ref={scrollRef}\n          className={\n            setActiveRight\n              ? \"events-center-right active_btnClick\"\n              : \"events-center-right\"\n          }\n        >\n          <SpecificDate />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EventsMain;\n","import \"./teams.scss\";\n\nfunction Team(props) {\n  function getValue(e) {\n    props.values({\n      name: e.target.value,\n      id: e.target.id,\n    });\n  }\n\n  return (\n    <div className=\"team\">\n      <label>\n        <input\n          id={props.id}\n          type=\"radio\"\n          value={props.value}\n          className=\"teamRadio\"\n          onChange={getValue}\n        />\n        <img src={props.img} alt={props.value} />\n      </label>\n    </div>\n  );\n}\n\nexport default Team;\n","import \"./teams.scss\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\nimport { useDispatch } from \"react-redux\";\nimport Team from \"./Team\";\nimport { useSelector } from \"react-redux\";\nimport HomeSkeleton from \"../../loads/HomeSkeleton\";\n\nfunction Teams() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedTeam, setSelectedTeam] = useState({});\n  const teamStatus = useSelector((store) => store.userInfo.teamLoadStatus);\n  const team = useSelector((store) => store.userInfo.teamSelected);\n  const changeTeam = useSelector((store) => store.userInfo.changeTeam);\n  const allTeams = useSelector((store) => store.userInfo.teams);\n  const teamSelected = Object.keys(selectedTeam).length !== 0;\n\n  // this should be moved to app to prevent slight teams page load\n  useEffect(() => {\n    document.title = `Teams`;\n    if (team.id !== undefined && changeTeam === false)\n      return history.push(`/teams/${team.id}`);\n  }, [teamSelected, history, team, changeTeam]);\n\n  function submitHandler(e) {\n    dispatch(\n      infoActions.userTeamHandler({\n        teamSelected: {\n          name: selectedTeam.name,\n          id: selectedTeam.id,\n        },\n      })\n    );\n    history.push(`teams/${selectedTeam.id}`);\n  }\n\n  const classType = !teamSelected ? \"submit hide\" : \"submit\";\n\n  if (teamStatus === \"loading\") return <HomeSkeleton />;\n\n  function getValues(value) {\n    setSelectedTeam(value);\n  }\n\n  return (\n    <form className=\"teams\" onSubmit={submitHandler}>\n      {allTeams.map((team) => (\n        <Team\n          checked={!teamSelected ? \"unchecked\" : \"checked\"}\n          value={team.strTeam}\n          img={team.strTeamBadge}\n          key={team.idTeam}\n          id={team.idTeam}\n          values={getValues}\n        />\n      ))}\n      <button className={classType} type=\"submit\">\n        <span>{selectedTeam.name}</span>\n        <span className=\"submit-span\">Submit</span>\n      </button>\n    </form>\n  );\n}\n\nexport default Teams;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { fetchTeamPlayers } from \"../../../data/UserInfo/infoActions\";\nimport \"./team.scss\";\nimport PlayersContainer from \"../../loads/PlayersContainer\";\nimport { useEffect } from \"react\";\nfunction TeamPlayers(props) {\n  let content = \"\";\n  const dispatch = useDispatch();\n  const players = useSelector((store) => store.userInfo.players);\n  const status = useSelector((store) => store.userInfo.playersLoadStatus);\n\n  useEffect(() => {\n    dispatch(fetchTeamPlayers(props.id));\n  }, [dispatch]);\n\n  // players list content\n\n  const playersList = players.map((player) => (\n    <div key={player.idPlayer} className=\"playerItem\">\n      <span>{player.strPlayer}</span>\n      <p>{player.strPosition}</p>\n    </div>\n  ));\n\n  // set content based on loading status | not the best way to do it\n  if (status === \"loading\") {\n    content = <PlayersContainer />;\n  } else if (status === \"done\") {\n    content = playersList;\n  }\n\n  return <div className=\"playersContainer\">{content}</div>;\n}\n\nexport default TeamPlayers;\n","import { useSelector } from \"react-redux\";\nimport { getTeamInfo } from \"./Helper\";\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TeamGames from \"../../loads/TeamGames\";\nimport \"./team.scss\";\n\nfunction TeamNext() {\n  let content = \"\";\n  const lang = navigator.language;\n\n  const upcomingGames = useSelector((store) => store.userInfo.upcomingGames);\n  const teams = useSelector((store) => store.userInfo.teams);\n  const status = useSelector((store) => store.userInfo.upcomingGamesStatus);\n\n  const nextFiveGames = upcomingGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n\n    const gameDate = game.strTimestamp;\n\n    const dateLocal = new Date(gameDate);\n    const isToday = new Date();\n    const isYesterday = new Date(Date.now() - 864e5);\n    const yesterday = isYesterday.toLocaleDateString(`${lang}`, {\n      weekday: \"short\",\n      month: \"numeric\",\n      day: \"numeric\",\n    });\n    const today = isToday.toLocaleDateString(`${lang}`, {\n      weekday: \"short\",\n      month: \"numeric\",\n      day: \"numeric\",\n    });\n\n    const date = dateLocal.toLocaleDateString(`${lang}`, {\n      weekday: \"short\",\n      month: \"numeric\",\n      day: \"numeric\",\n    });\n\n    const time = dateLocal.toLocaleTimeString(`${lang}`, {\n      hour: \"numeric\",\n      minute: \"numeric\",\n    });\n\n    // due to api update time, it might be a day behind and still show yesterdays game as upcomingGame\n    if (date === yesterday) return;\n\n    return (\n      <div key={game.idEvent} className=\"upcomingGame\">\n        <div className=\"upcomingGame-team gameTeam\">\n          <Link to={`/teams/${game.idHomeTeam}`}>\n            <img src={homeTeam.teamLogo} alt={homeTeam.teamShort} />\n          </Link>\n          <span>{homeTeam.teamShort}</span>\n        </div>\n        <div className=\"upcomingGame-info\">\n          <span className=\"upcomingGame-info-time\">{time}</span>\n          <span className=\"upcomingGame-info-date\">\n            {today === date ? \"Today\" : date}\n          </span>\n        </div>\n        <div className=\"upcomingGame-team gameTeam\">\n          <Link to={`/teams/${game.idAwayTeam}`}>\n            <img src={awayTeam.teamLogo} alt=\"test\" />\n          </Link>\n          <span>{awayTeam.teamShort}</span>\n        </div>\n      </div>\n    );\n  });\n  // set content based on loading status | not the best way to do it\n  if (status === \"loading\") {\n    content = <TeamGames />;\n  } else if (status === \"done\") {\n    content = nextFiveGames;\n  }\n\n  return (\n    <Fragment>\n      <span className=\"label\">Upcoming Games</span>\n      {content}\n    </Fragment>\n  );\n}\n\nexport default TeamNext;\n","import { useSelector } from \"react-redux\";\nimport \"./team.scss\";\nimport { getTeamInfo } from \"./Helper\";\nimport TeamGames from \"../../loads/TeamGames\";\n\nfunction TeamPrevious() {\n  let content = \"\";\n\n  const previousGames = useSelector((store) => store.userInfo.previousGames);\n  const teams = useSelector((store) => store.userInfo.teams);\n  const status = useSelector((store) => store.userInfo.previousGamesStatus);\n\n  const previousFiveGames = previousGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n\n    const lang = navigator.language;\n    const dateLocal = new Date(game.strTimestamp);\n    const date = dateLocal.toLocaleDateString(`${lang}`, {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n\n    let classBoldH = \"\";\n    let classBoldA = \"\";\n\n    if (+game.intHomeScore > +game.intAwayScore) {\n      classBoldH = \"previous-right bold\";\n    } else {\n      classBoldH = \"previous-right\";\n    }\n    if (+game.intAwayScore > +game.intHomeScore) {\n      classBoldA = \"previous-right bold\";\n    } else {\n      classBoldA = \"previous-right\";\n    }\n\n    return (\n      <div key={game.idEvent} className=\"previous-item\">\n        <div className=\"previous\">\n          <div className=\"previous-info\">\n            <div className=\"previous-info-score\">\n              <div className=\"previous-team gameTeam\">\n                <div className=\"previous-left\">\n                  <img src={homeTeam.teamLogo} alt={homeTeam.teamShort} />\n                  <span>{homeTeam.teamShort}</span>\n                </div>\n                <div className={classBoldH}>{game.intHomeScore}</div>\n              </div>\n              <div className=\"previous-team gameTeam\">\n                <div className=\"previous-left\">\n                  <img src={awayTeam.teamLogo} alt=\"test\" />\n                  <span>{awayTeam.teamShort}</span>\n                </div>\n                <div className={classBoldA}>{game.intAwayScore}</div>\n              </div>\n            </div>\n            <div className=\"previous-info-status\">\n              <span>{game.strStatus}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"previous-details\">Played on {date}</div>\n      </div>\n    );\n  });\n  // set content based on loading status | not the best way to do it\n  if (status === \"loading\") {\n    content = <TeamGames />;\n  } else if (status === \"done\") {\n    content = previousFiveGames;\n  }\n  return (\n    <div>\n      <span className=\"label\">Previous Games</span>\n      {content}\n    </div>\n  );\n}\n\nexport default TeamPrevious;\n","import \"./live.scss\";\nimport { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { liveItem, getTeamInfo } from \"../Helper\";\n\nfunction LiveEvent(props) {\n  let item = \" \";\n\n  const match = useRouteMatch();\n  const currentTeam = match.params.teamId;\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const status = useSelector((store) => store.userInfo.live.games.status);\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  liveGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n    const verifyHomeTeam = +game.idHomeTeam === +currentTeam;\n    const verifyAwayTeam = +game.idAwayTeam === +currentTeam;\n\n    if (verifyAwayTeam || verifyHomeTeam) {\n      item = liveItem(game, homeTeam, awayTeam);\n    }\n  });\n\n  // if (status === \"loading\") {\n  //     content = \"loading\";\n  //   } else\n  if (status === \"error\") return;\n  return (\n    <Fragment>\n      <div className=\"live-event\">\n        {status === \"error\" ? \"oops! unable to load live data\" : item}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default LiveEvent;\n","import React from \"react\";\n\nfunction SeatGeek() {\n  return <div></div>;\n}\n\nexport default SeatGeek;\n","import \"./team.scss\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchUpcomingGames,\n  fetchPreviousGames,\n} from \"../../../data/UserInfo/infoActions\";\nimport { eventActions } from \"../../../data/UserInfo/eventSlice\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport TeamPlayers from \"./TeamPlayers\";\nimport TeamNext from \"./TeamNext\";\nimport TeamPrevious from \"./TeamPrevious\";\nimport LiveEvent from \"./Live.js/LiveEvent\";\nimport SeatGeek from \"./SeatGeek\";\nimport LiveSugg from \"./Live.js/LiveSugg\";\n\nfunction TeamContent(props) {\n  let isLive = false;\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n  const status = useSelector((store) => store.userInfo.playersLoadStatus);\n  const UpcomingGamesstatus = useSelector(\n    (store) => store.userInfo.upcomingGamesStatus\n  );\n\n  const previousGamesStatus = useSelector(\n    (store) => store.userInfo.previousGamesStatus\n  );\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const teamID = match.params.teamId;\n\n  if (liveGames) {\n    liveGames.map((game) => {\n      const verifyHomeTeam = +game.idHomeTeam === +teamID;\n      const verifyAwayTeam = +game.idAwayTeam === +teamID;\n      if (verifyAwayTeam || verifyHomeTeam) {\n        isLive = true;\n      }\n      return isLive;\n    });\n  }\n\n  // slide right dash side\n  const setActiveRight = useSelector(\n    (store) => store.eventReducer.trigger_Actions.showTeamEvents\n  );\n  console.log();\n  function setShowRightHandler() {\n    dispatch(eventActions.toggleShowTeamEvents());\n  }\n\n  // -----> request team data\n  useEffect(() => {\n    dispatch(fetchUpcomingGames(props.teamID));\n    dispatch(fetchPreviousGames(props.teamID));\n    document.title = `${props.teamName}`;\n  }, [props.teamID, dispatch, props.teamName]);\n\n  // useEffect(() => {\n  //   dispatch(fetchLiveGames());\n  //   const interval = setInterval(() => {\n  //     dispatch(fetchLiveGames());\n  //   }, requestFqncy);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  return (\n    <div className=\"teamDash\">\n      <div className=\"dashLeft\">\n        <div\n          className=\"dashLeftHead\"\n          style={{\n            backgroundImage: `url(${props.stadiumImg})`,\n          }}\n        >\n          <div className=\"dashLeftHeadAbs\"></div>\n          <div className=\"dashLeftHeadIntro\">\n            <span>{props.stadiumName}</span>\n            <h3>{props.teamName}</h3>\n          </div>\n          <div className=\"dashLeftHead-action\">\n            <button onClick={setShowRightHandler}>\n              <span></span> View Team Games\n            </button>\n          </div>\n        </div>\n\n        {isLive && <LiveEvent />}\n        {!isLive && liveGames.length >= 1 && <LiveSugg />}\n        <SeatGeek />\n        {status !== \"error\" && (\n          <div className=\"dashLeftPlayers\">\n            <TeamPlayers id={teamID} />\n          </div>\n        )}\n\n        <div className=\"dashLeftDesc\">\n          <p>{props.teamDesc}</p>\n        </div>\n      </div>\n      <div\n        className={setActiveRight ? \"dashRight active_btnClick\" : \"dashRight\"}\n      >\n        {UpcomingGamesstatus === \"error\" ? (\n          console.log(\"unable to load upcoming games\")\n        ) : (\n          <div className=\"upcomingGames\">\n            <TeamNext id={props.teamID} />\n          </div>\n        )}\n        {previousGamesStatus === \"error\" ? (\n          console.log(\"unable to load previous games\")\n        ) : (\n          <div className=\"previousGames\">\n            <TeamPrevious />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TeamContent;\n","import { useRouteMatch } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport TeamContent from \"./TeamContent\";\nimport { Fragment } from \"react\";\n\nfunction TeamDetails() {\n  const match = useRouteMatch();\n  const teams = useSelector((store) => store.userInfo.teams);\n  const teamID = match.params.teamId;\n\n  return (\n    <Fragment>\n      {teams.map((team) => {\n        if (team.idTeam === teamID) {\n          return (\n            <TeamContent\n              key={teamID}\n              stadiumName={team.strStadium}\n              stadiumImg={team.strStadiumThumb}\n              teamName={team.strTeam}\n              teamDesc={team.strDescriptionEN}\n              teamID={teamID}\n            />\n          );\n        }\n      })}\n    </Fragment>\n  );\n}\n\nexport default TeamDetails;\n","import Toggle from \"@atlaskit/toggle\";\nimport { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\n\nfunction ScoresSetting() {\n  const dispatch = useDispatch();\n  const scoresSetting = useSelector(\n    (store) => store.userInfo.settings.hideScores\n  );\n  function toggledHandler() {\n    dispatch(infoActions.setHideScores({ hide: !scoresSetting }));\n  }\n\n  return (\n    <Fragment>\n      <Toggle\n        id=\"toggle-default\"\n        onChange={toggledHandler}\n        isChecked={scoresSetting && true}\n      />\n    </Fragment>\n  );\n}\n\nexport default ScoresSetting;\n","import \"./preferences.scss\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\nimport Select from \"@atlaskit/select\";\nimport {\n  fetchUpcomingGames,\n  fetchPreviousGames,\n} from \"../../../data/UserInfo/infoActions\";\n\nfunction UpdateTeam() {\n  const dispatch = useDispatch();\n  const [showBTN, setShowBTN] = useState(false);\n  const [team, setTeam] = useState(null);\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  let item = \"\";\n  let daft = [];\n  teams.map((team) => {\n    item = { label: team.strTeam, value: team.idTeam };\n    daft.push(item);\n    return daft;\n  });\n\n  function selectionMadeHandler(team) {\n    setShowBTN(true);\n    setTeam(team);\n  }\n\n  function submitValuesHandler() {\n    console.log(item);\n    dispatch(\n      infoActions.userTeamHandler({\n        teamSelected: {\n          name: team.label,\n          id: team.value,\n        },\n      })\n    );\n    dispatch(fetchUpcomingGames(team.value));\n    dispatch(fetchPreviousGames(team.value));\n    setShowBTN(false);\n  }\n\n  const btnDisabled = showBTN ? false : true;\n\n  return (\n    <div className=\"preferences-list-teams\">\n      <Select\n        inputId=\"single-select-example\"\n        className=\"preferences-list-teams-select\"\n        classNamePrefix=\"react-select\"\n        options={daft}\n        placeholder=\"Select team\"\n        onChange={selectionMadeHandler}\n      />\n      <button\n        className=\"preferences-list-teams-submit\"\n        onClick={submitValuesHandler}\n        disabled={btnDisabled}\n      >\n        Update\n      </button>\n    </div>\n  );\n}\n\nexport default UpdateTeam;\n","import Toggle from \"@atlaskit/toggle\";\nimport { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\n\nfunction AddToCalendar() {\n  const dispatch = useDispatch();\n  const addToCalendar = useSelector(\n    (store) => store.userInfo.settings.addToCalendar\n  );\n\n  function toggledHandler() {\n    dispatch(infoActions.setAddToCalendar({ calendarOpt: !addToCalendar }));\n  }\n\n  return (\n    <Fragment>\n      <Toggle\n        id=\"toggle-default\"\n        onChange={toggledHandler}\n        isChecked={addToCalendar && true}\n      />\n    </Fragment>\n  );\n}\n\nexport default AddToCalendar;\n","import Toggle from \"@atlaskit/toggle\";\nimport { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\n\nfunction Notifications() {\n  const dispatch = useDispatch();\n  const opted = useSelector(\n    (store) => store.userInfo.settings.notifications.allow\n  );\n\n  function toggledHandler() {\n    dispatch(infoActions.setNotifications({ opted: !opted }));\n  }\n  return (\n    <Fragment>\n      <Toggle\n        id=\"toggle-default\"\n        onChange={toggledHandler}\n        isChecked={opted && true}\n      />\n    </Fragment>\n  );\n}\n\nexport default Notifications;\n","import \"./preferences.scss\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Toggle from \"@atlaskit/toggle\";\nimport { infoActions } from \"../../../data/UserInfo/infoSlice\";\nimport ScoresSetting from \"./ScoresSetting\";\nimport UpdateTeam from \"./UpdateTeam\";\nimport AddToCalendar from \"./AddToCalendar\";\nimport Notifications from \"./Notifications\";\n\nfunction Main() {\n  const dispatch = useDispatch();\n  const theme = useSelector((store) => store.userInfo.settings.theme);\n  const currentTeam = useSelector((store) => store.userInfo.teamSelected);\n  const teams = useSelector((store) => store.userInfo.teams);\n  const userSelectedTeam = Object.keys(teams).length !== 0;\n\n  useEffect(() => {\n    document.title = `Preferences`;\n  }, []);\n\n  function darkModeHandler() {\n    dispatch(\n      infoActions.setAppTheme({ theme: theme === \"dark\" ? \"light\" : \"dark\" })\n    );\n  }\n\n  return (\n    <div className=\"preferences\">\n      <div className=\"preferences-container\">\n        <div className=\"preferences-list\">\n          <div class=\"preferences-team\">\n            <span className=\"preferences-team-title\">Preferences</span>\n            {userSelectedTeam && (\n              <span className=\"preferences-team-current\">\n                {currentTeam.name}\n              </span>\n            )}\n          </div>\n          <ul>\n            <li>\n              <span className=\"preferences-setting-label\">\n                <p>Update Team</p>\n              </span>\n              <div className=\"preferences-setting-type\">\n                <UpdateTeam />\n              </div>\n            </li>\n            <li>\n              <span className=\"preferences-setting-label\">\n                <p>Theme:</p>\n                <span>{theme === \"dark\" ? \"Dim\" : \"Classic\"} </span>\n              </span>\n              <div className=\"preferences-setting-type\">\n                <Toggle\n                  id=\"preferences--toggle\"\n                  onChange={darkModeHandler}\n                  isChecked={theme !== \"dark\" ? true : false}\n                />\n              </div>\n            </li>\n            <li>\n              <span className=\"preferences-setting-label\">\n                <p>Add to Calendar</p>\n                <span>\n                  A button that enables you to add events to your calendar.\n                  Google, Apple, Outlook, and others.\n                </span>\n              </span>\n              <div className=\"preferences-setting-type\">\n                <AddToCalendar />\n              </div>\n            </li>\n            <li>\n              <span className=\"preferences-setting-label\">\n                <p>Hide Scores</p>\n              </span>\n              <div className=\"preferences-setting-type\">\n                <ScoresSetting />\n              </div>\n            </li>\n            <li>\n              <span className=\"preferences-setting-label\">\n                <p>Allow in-app notifications</p>\n                <span>\n                  When enabled, you will recieve in app notifications of your\n                  favorite team's half-time & final game score.\n                </span>\n              </span>\n              <div className=\"preferences-setting-type\">\n                <Notifications />\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTeams, fetchLiveGames } from \"./data/UserInfo/infoActions\";\nimport {\n  fetchLast15Games,\n  fetchNext15Games,\n} from \"./data/UserInfo/eventsActions\";\nimport { themeChange } from \"./data/UserInfo/settingsActions\";\nimport Layout from \"./components/layout/Layout\";\nimport HomeSkeleton from \"./components/loads/HomeSkeleton\";\nimport EventsMain from \"./components/pages/Events/EventsMain\";\nimport Teams from \"./components/pages/teams/Teams\";\nimport TeamDetails from \"./components/pages/teamDetails/TeamDetails\";\nimport Main from \"./components/pages/Preferences/Main\";\n\nconst HomeMain = React.lazy(() => import(\"./components/pages/Home/HomeMain\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const theme = useSelector((store) => store.userInfo.settings.theme);\n  // -----> Load Teams\n  useEffect(() => {\n    dispatch(fetchTeams());\n    dispatch(themeChange(theme));\n    dispatch(fetchLast15Games());\n    dispatch(fetchNext15Games());\n  }, [dispatch, theme]);\n\n  let requestFqncy = liveGames ? 60000 : 300000;\n  useEffect(() => {\n    dispatch(fetchLiveGames());\n    const interval = setInterval(() => {\n      dispatch(fetchLiveGames());\n    }, requestFqncy);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Layout>\n      <Suspense fallback={<HomeSkeleton />}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route path=\"/home\">\n            <HomeMain />\n          </Route>\n          <Route path=\"/teams/:teamId\">\n            <TeamDetails />\n          </Route>\n          <Route path=\"/teams\" exact>\n            <Teams />\n          </Route>\n          <Route path=\"/preferences\">\n            <Main />\n          </Route>\n          <Route path=\"/events/:eventId\">\n            <HomeSkeleton />\n          </Route>\n          <Route path=\"/events\">\n            <EventsMain />\n          </Route>\n          <Route path=\"*\">\n            {/* 404 */}\n            <HomeSkeleton />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { infoActions } from \"./infoSlice\";\n\nexport function themeChange(theme) {\n  return (dispatch) => {\n    if (theme === \"light\") {\n      document.body.classList.add(\"light-mode\");\n    } else if (theme === \"dark\") {\n      document.body.classList.remove(\"light-mode\");\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./data/mainRedux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","import \"../events.scss\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTeamInfo, eventLayoutOpt } from \"../../teamDetails/Helper\";\nimport { eventActions } from \"../../../../data/UserInfo/eventSlice\";\n\nfunction PastEvents() {\n  const match = useRouteMatch();\n\n  const homePth = match.path === \"/home\";\n  console.log(homePth);\n  const dispatch = useDispatch();\n  const scoresSetting = useSelector(\n    (store) => store.userInfo.settings.hideScores\n  );\n  const events = useSelector(\n    (store) => store.eventReducer.events.last15.events\n  );\n\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 4.1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 8000,\n    arrows: false,\n    className: \"past-events\",\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 3.24,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 2.09,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const z = events.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n    const optClass = \"events-past-item-second\";\n\n    const b = eventLayoutOpt(game, homeTeam, awayTeam, optClass, scoresSetting);\n\n    return (\n      <div className=\"events-past-item\" key={game.idEvent}>\n        {b}\n      </div>\n    );\n  });\n\n  function showEventsHandler() {\n    dispatch(eventActions.toggleShowEvents());\n  }\n\n  return (\n    <div className=\"events-past\">\n      <div className=\"events-past-head\">\n        <div className=\"events-past-head-title\">\n          <h4>Around the league</h4>\n          <span>Previous scores & more.</span>\n        </div>\n        {!homePth && (\n          <button className=\"events-past-head-btn\" onClick={showEventsHandler}>\n            <span></span> View Game Calendar\n          </button>\n        )}\n      </div>\n\n      <Slider {...settings}>{z}</Slider>\n    </div>\n  );\n}\n\nexport default PastEvents;\n","import \"./live.scss\";\nimport { Carousel } from \"@trendyol-js/react-carousel\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { liveItem, getTeamInfo, eventLiveScore } from \"../Helper\";\n\nfunction LiveSugg() {\n  // async function getTickets() {\n  //   try {\n  //     const startR = await fetch(\n  //       \"https://api.seatgeek.com/2/events?q=boston+celtics&client_id=Mjg2MjMyNnwxNjIwMTYyMDYyLjk0OTM3OA\"\n  //     );\n  //     const dljksal = await startR.json();\n  //     console.log(dljksal);\n  //   } catch (error) {}\n  // }\n  // getTickets();\n  const scoresSetting = useSelector(\n    (store) => store.userInfo.settings.hideScores\n  );\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 4.25,\n    slidesToScroll: 2,\n    autoplay: true,\n    autoplaySpeed: 14000,\n    arrows: false,\n    className: \"sugg-item_live\",\n    responsive: [\n      {\n        breakpoint: 900,\n        settings: {\n          slidesToShow: 3.2,\n          slidesToScroll: 1,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2.15,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  const liveGames = useSelector((store) => store.userInfo.live.games.all);\n  const teams = useSelector((store) => store.userInfo.teams);\n\n  const z = liveGames.map((game) => {\n    const homeTeam = getTeamInfo(game.idHomeTeam, teams);\n    const awayTeam = getTeamInfo(game.idAwayTeam, teams);\n    const hideScores = scoresSetting;\n    const b = eventLiveScore(game, homeTeam, awayTeam, undefined, hideScores);\n\n    return (\n      <div className=\"sugg-item\" key={game.idEvent}>\n        {b}\n      </div>\n    );\n  });\n  // console.log(\"z\", z);\n  // console.log(\"liveGames\", liveGames);\n  if (!liveGames) return null;\n  return <Slider {...settings}>{z}</Slider>;\n}\n\nexport default LiveSugg;\n"],"sourceRoot":""}